[bed_mesh]
mesh_min = 20, 45
mesh_max = 280, 280
speed = 400
horizontal_move_z = 3
probe_count = 9,9
algorithm = bicubic
##[(7x7)-1] / 2 = 24
##[(5x5)-1] / 2 = 12
##[(9x9)-1] / 2 = 
relative_reference_index: 40
#relative_reference_index = 17
split_delta_z = 0.0125
move_check_distance = 3
mesh_pps = 2,2
#fade_start = 0
#fade_end = 0.5
#fade_target = 0

#####################################################################
#  Macros
#####################################################################
## customize BED MESH CALIBRATE gcode 
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BASE_BED_MESH_CALIBRATE
gcode:
  _CG28
  Attach_Probe
  BED_MESH_CLEAR
  ## check if QGL was already executed
  {% if printer["gcode_macro QUAD_GANTRY_LEVEL"].qgl_done == 'false' %}
    QUAD_GANTRY_LEVEL
  {% endif %}
  BASE_BED_MESH_CALIBRATE
  Dock_Probe

## use MESH_STORE            -> generate MESH and save immediately 
## use MESH_STORE SAVE=false -> generate MESH and save it later
[gcode_macro MESH_STORE]
variable_save_at_end: 'false'
gcode:
  # set default parameter value
  {% set save = params.SAVE|default('true') %}
  BED_MESH_CALIBRATE
  BED_MESH_PROFILE SAVE=Voron-Bed_Temp-{printer.heater_bed.target|int}C
  BED_MESH_PROFILE REMOVE=default
  # Move to Middle
  G90                    ; set absolute
  G0 Z7.5 F900           ; lift nozzle
  G0 X150 Y150 Z30 F7200 ; move to middle
  {% if save|lower == 'true' %}
    _PRINT_AR T="MESH: Save Config!"
    SAVE_CONFIG
  {% else %}
    _PRINT_AR T="MESH: Save Config after print done"
    SET_GCODE_VARIABLE MACRO=MESH_STORE VARIABLE=save_at_end VALUE='"true"'
  {% endif %}    

## use MESH_LOAD           -> load an existing MESH
## use MESH_LOAD AUTO=true -> load an existing MESH or generate a new one and prepare it to be saved after print end
[gcode_macro MESH_LOAD]
# set that to true to enable autogeneration of a missing mesh
gcode:
  # set default parameter value
  {% set auto = params.AUTO|default('false') %}
  {% set bed_temp = printer.heater_bed.target|int %}
  {% if printer.configfile.config["bed_mesh Voron-Bed_Temp-" + bed_temp|string + "C"] is defined %}
    BED_MESH_CLEAR
    BED_MESH_PROFILE LOAD=Voron-Bed_Temp-{printer.heater_bed.target|int}C
    _PRINT_AR T="{"MESH: Voron-Bed_Temp-" + bed_temp|string + "C loaded"}"
  {% else %}
    {% if auto|lower == 'true' %}
      _PRINT_AR T="{"MESH: Voron-Bed_Temp-" + bed_temp|string + "C needs to be generated"}"
      MESH_STORE SAVE=false
    {% else %}
      _PRINT_AR T="{"MESH ERROR: Voron-Bed_Temp-" + bed_temp|string + "C not defined"}"
    {% endif %}
  {% endif %}

## add this to your PRINT_END to save a mesh if needed 10 seconds after print ended
## UPDATE_DELAYED_GCODE ID=_MESH_SAVE DURATION=10
[delayed_gcode _MESH_SAVE]
gcode:
  {% if printer["gcode_macro MESH_STORE"].save_at_end == 'true'  %}
    _PRINT_AR T="MESH: Save Config!"
    SAVE_CONFIG
  {% endif %} 